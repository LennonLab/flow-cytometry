setwd("C:/Users/Megan/Github/mothur")
head(ids2.list)
setwd("C:\Users\Megan\Github\mothur")
# Read in your data generated by mothur analyis
'''{r}
tax <- read.csv(Cstat_all.final.taxonomy,sep = "\t",header=F)
seqs <- read.csv(Cstat_all.pick.fasta,header=F)
'''
info <- unname(c(Sys.info()[6],
.Platform$OS.type,
Sys.info()[1:2],
R.version.string,
.Platform$GUI,
system("git --version", intern = TRUE)))
info
info <- unname(c(Sys.info()[6],
.Platform$OS.type,
Sys.info()[1:2],
R.version.string,
.Platform$GUI,
system("git --version", intern = TRUE)))
info
Sys.info()[6]
.Platform$OS.type
Sys.info()[1:2]
R.version.string
.Platform$GUI
install.packages("installr")
require(installr)
updateR()
update.packages()
y
Sys.info()[6]
.Platform$OS.type
Sys.info()[1:2]
R.version.string
.Platform$GUI
system("git --version", intern = TRUE)
?system
info <- unname(c(Sys.info()[6],
.Platform$OS.type,
Sys.info()[1:2],
R.version.string,
.Platform$GUI,
system("git --version", intern = TRUE)))
info
getwd()
require(installr)
updateR()
s.v <-
matrix(c(74, 41, 26, 59),
nrow = 2,
dimnames = list(Treatment = c("N","P"),
mut.type = c("v", "s")))
fisher.test(s.v, alternative = "two.sided", conf.int = 0.95)
s.v
rm(list = ls())
setwd("C:/Users/Megan/GitHub/flow-cytometry")
library(flowPeaks); library(flowCore); library(flowStats); library(flowViz)
library(flowPeaks)
library(flowCore)
library(flowStats)
library(flowViz)
library(flowQ); library(flowClust); library(flowUtils); library(flowMeans); library(flowDensity)
library(flowQ)
biocLite(flowQ)
source("http://bioconductor.org/biocLite.R")
biocLite(flowQ)
library(flowClust)
library(flowUtils)
library(flowMeans)
library(flowDensity)
browseVignettes(package - "flowMeans")
?browseVignettes
browseVignettes(package = "flowMeans")
biocLite("GEOmap")
biocLite(Logicle)
biocLite("Logicle")
library(GEOmap)
library("flowStats", lib.loc="~/R/win-library/3.2")
library("flowWorkspace", lib.loc="~/R/win-library/3.2")
library("GEOmap", lib.loc="~/R/win-library/3.2")
detach("package:GEOmap", unload=TRUE)
install.packages("GEOmap")
library(flowPeaks); library(flowCore); #library(flowStats);
library(flowClust); library(flowUtils); library(flowMeans); library(flowDensity)
library(flowClust); library(flowUtils); library(flowMeans); library(flowDensity)
library(GEOmap)
library(Logicle)
